{
    "componentChunkName": "component---src-pages-archive-js",
    "path": "/archive/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2022-07-20","title":"waliullah.dev","tech":["Gatsby JS","React","Netlify","JS","CSS"],"github":"https://github.com/SABERGLOW/waliullah.dev","external":"https://github.com/SABERGLOW/waliullah.dev","company":null},"html":"<p>üë®‚Äçüíª My personal portfolio website built with Gatsby, inspired by Brittany Chiang.</p>"}},{"node":{"frontmatter":{"date":"2022-05-18","title":"Phasebook","tech":["React","Material UI","Firebase","GitHub Pages","GitHub Actions"],"github":"https://github.com/SABERGLOW/facebook-clone-react","external":"https://saberglow.github.io/facebook-clone-react/","company":null},"html":"<p>üöÄ A simple and responsive Facebook clone with ReactJS, Material UI, Firebase Auth, and Firestore. Live demo available <a href=\"https://saberglow.github.io/facebook-clone-react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>, powered by <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Pages</a>.</p>"}},{"node":{"frontmatter":{"date":"2022-05-09","title":"Deja-Vu","tech":["Angular 13","Material Design for Bootstrap 5","Azure Face API","Compodoc"],"github":"https://github.com/SABERGLOW/Deja-Vu","external":"https://saberglow.github.io/Deja-Vu/","company":null},"html":"<p>üéØ A client-side application with Angular 13 using Microsoft's Face API to detect, recognize and analyze human faces and emotions. Documentation available at <a href=\"https://saberglow.github.io/Deja-Vu/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deja-Vu Documentation</a>, powered by <a href=\"https://compodoc.app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Compodoc</a>.</p>"}},{"node":{"frontmatter":{"date":"2022-05-01","title":"GitHub Readme Profile","tech":["GitHub Markdown","Readme Profile","GitHub Stats Cards"],"github":"https://github.com/SABERGLOW/SABERGLOW","external":"https://github.com/SABERGLOW","company":null},"html":"<p>üåö My personalized GithHub profile repo.</p>"}},{"node":{"frontmatter":{"date":"2022-04-05","title":"IVT Spaceship","tech":["Java 11","Maven","JUnit","Mockito"],"github":"https://github.com/SABERGLOW/ivt-lab","external":"https://github.com/SABERGLOW/ivt-lab","company":"BME"},"html":"<p>This is a sample application for the Integration and Verification Techniques course at BME MIT.</p>\n<p>The application is simplified and deliberately contains bugs that I was required to fix.</p>"}},{"node":{"frontmatter":{"date":"2021-12-11","title":"Asteroid Miners","tech":["Java","libGDX","mini2Dx"],"github":"https://github.com/SABERGLOW/AsteroidMiners","external":"https://github.com/SABERGLOW/AsteroidMiners","company":null},"html":"<p>‚òÑÔ∏è An Asteroid Mining game developed in JAVA using LibGDX and mini2Dx.</p>\n<p>It's survival type game where you mine and collect resources to build Robots, Teleportation Gates and a Space Station to win the game. Beware, Dangers lurk in the asteroid belt. SunStorms and Radioactive Explosions can be your demise. Mine, Survicve, and Build a Space Station to win. Happy Mining.</p>"}},{"node":{"frontmatter":{"date":"2021-12-10","title":"E-Butler","tech":["PlatformIO","NodeMCU-ESP8266","Firebase Cloud Messaging","Firebase RTDB","Firebase Functions","Google Assistant","Dialogflow","Kotlin"],"github":"https://github.com/SABERGLOW/E-Butler","external":"https://github.com/SABERGLOW/E-Butler","company":null},"html":"<p>üõéÔ∏è Home Automation Tools using NodeMCU-ESP8266 featuring realtime notifications about door lock/unlock status.</p>\n<p>This project is about different home automation features that you can implement using ESP8266 Module paired with Firebase and Google Assistant. As an example, I have implemented a door unlock demo in this project. The aim is to alert the user when the doorbell rings and enable him/her to unlock the door using Google Assisstant. The project can be further developed to include Google Home integration, IFTTT, or whatever your heart may desire.</p>"}},{"node":{"frontmatter":{"date":"2021-12-10","title":"Spar Me Please","tech":["Android","Kotlin","Recycler View","Retrofit","Room Persistence Library"],"github":"https://github.com/SABERGLOW/SparMePlease","external":"https://github.com/SABERGLOW/SparMePlease","company":null},"html":"<p>üõí A pretty little Shopping List application developed in Kotlin.</p>"}},{"node":{"frontmatter":{"date":"2021-12-10","title":"To-Do List","tech":["HTML","CSS","JS","Bootstrap 3","Persistent Storage"],"github":"https://github.com/SABERGLOW/ToDo-List","external":"https://github.com/SABERGLOW/ToDo-List","company":null},"html":"<p>üìù A very simple and clean To-Do list web page that uses Bootstrap 3.</p>\n<p>You can add new ToDos, mark them as \"active\", \"inactive\", or \"done\". You can also delete them.</p>"}},{"node":{"frontmatter":{"date":"2021-05-31","title":"Space Nebula VFX","tech":["3DS Max","Fume FX","Stroke MX","Krakatoa MX","AWS Thinkbox","Adobe AfterEffects","Adobe Premier Pro"],"github":"https://github.com/SABERGLOW/Space_Nebula","external":"https://bmeedu-my.sharepoint.com/:v:/g/personal/waliullah_edu_bme_hu/EU5gwQ9w7KtJsP1OH_ao78ABg8uXYfKRmtfIzXcO5mNMTQ?e=3lvcUk","company":"BME"},"html":"<p>üåå A Particle Flow sim for a Space Nebula VFX in 3DS Max using Fume FX, Stoke MX, and Krakatoa MX.</p>\n<p>The goal of this project was to create a particle sequence simulation in 3DS Max which could be used to create a visually stunning fictional <a href=\"https://bmeedu-my.sharepoint.com/:v:/g/personal/waliullah_edu_bme_hu/EU5gwQ9w7KtJsP1OH_ao78ABg8uXYfKRmtfIzXcO5mNMTQ?e=3lvcUk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Space Nebula animation</a>.</p>\n<p>For detailed information, refer to the <a href=\"https://github.com/SABERGLOW/Space_Nebula/blob/main/Project%20Description.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Project Description</a>.</p>"}},{"node":{"frontmatter":{"date":"2021-03-19","title":"Feedback Management System","tech":["C++","OOP","Polymorphism","Data Encapsulation","Dynamic Mem Alloc"],"github":"https://github.com/SABERGLOW/Feedback_Management_System","external":"https://github.com/SABERGLOW/Feedback_Management_System/blob/master/Developer%E2%80%99s%20Documentation.pdf","company":null},"html":"<p>üßæ An object oriented C++ Program which stores and maintains course feedback provided by student about courses offered by any university/educational institution.</p>"}},{"node":{"frontmatter":{"date":"2021-01-13","title":"Clrd.","tech":["JavaScript","HTML","CSS"],"github":"https://github.com/SABERGLOW/Clrd.","external":"https://codepen.io/saberglow/pen/OJNypmg","company":null},"html":"<p>üì∑ A simple web-page for basic image filters.</p>\n<p>Clrd. is a web project that uses my own filters implemented in JavaScript to dynamically edit the image. Have Fun with it :)</p>"}},{"node":{"frontmatter":{"date":"2020-12-16","title":"Movie Recommender Engine","tech":["Java","JUnit","Swing GUI","Serialization"],"github":"https://github.com/SABERGLOW/Movie_Recommender_Engine","external":"https://www.dukelearntoprogram.com//capstone/recommender.php?id=N4yFi2jPx5Xr7l","company":null},"html":"<p>üçø A DIY JAVA recommender engine for movies [GUI+Web App]</p>\n<p>The goal of the project is to recommend movies based on different criteria which is further based on user ratings of those movies.</p>\n<p>The idea was inspired by the website ‚Äútwitflicks.com‚Äù which used to mine Twitter for current movies related tweets.</p>"}},{"node":{"frontmatter":{"date":"2020-07-20","title":"Codility Tasks","tech":["C","C++","Java"],"github":"https://github.com/SABERGLOW/Codility_Tasks","external":"https://app.codility.com/programmers/trainings/","company":null},"html":"<p>üë®‚Äçüíª Codility Tasks &#x26; Solutions [100% Performance]</p>"}},{"node":{"frontmatter":{"date":"2020-07-09","title":"Songs","tech":["C","Music Library","Filehandling"],"github":"https://github.com/SABERGLOW/SONGS","external":"https://github.com/SABERGLOW/SONGS/blob/master/Developers%20Documentation.docx","company":null},"html":"<p>üé∂ C language project created to manage songs and their attributes (artist, release year, genre)</p>\n<p>The program is designed to store data of songs in a database.</p>"}},{"node":{"frontmatter":{"date":"2020-01-01","title":"String Class","tech":["C++","String Manipulation","Operator Overloading","Dynamic Mem Alloc"],"github":"https://github.com/SABERGLOW/String_Class","external":null,"company":"BME"},"html":"<p>Home made string class in C++.</p>"}},{"node":{"frontmatter":{"date":"2020-01-01","title":"Vector Class","tech":["C++","Vectors","Operator Overloading","Dynamic Mem Alloc"],"github":"https://github.com/SABERGLOW/Vector_Class","external":null,"company":"BME"},"html":"<p>Home made vector class in C++.</p>"}}]}},"pageContext":{}},
    "staticQueryHashes": ["1994492073","2009693873","3825832676","4162897811"]}